{
	"id": "a82be0d0829845094b5597d195151506",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"samples/AccountManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"../interfaces/UserOperation.sol\";\nimport \"../interfaces/IAccountManager.sol\";\n\ncontract AccountManager is IAccountManager {\n\n    address public immutable masterWallet;\n\n    mapping(address => bool) public authorizedUsers;\n\n    constructor(address _masterWallet) {\n        masterWallet = _masterWallet;\n    }\n\n    function authorizeUserOp(UserOperation calldata userOp) external view {\n        require(authorizedUsers[userOp.sender], \"User not authorized\");\n    }\n\n    function addUserAuthorization(address user) external onlyMasterWallet returns (bool) {\n        authorizedUsers[user] = true;\n        return true;\n    }\n\n    function removeUserAuthorization(address user) external onlyMasterWallet returns (bool) {\n        authorizedUsers[user] = false;\n        return true;\n    }\n\n    modifier onlyMasterWallet() {\n        require(msg.sender == masterWallet, \"Only master wallet can call\");\n        _;\n    }\n\n}\n"
			},
			"interfaces/IAccountManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\ninterface IAccountManager {\n\nfunction authorizeUserOp(UserOperation calldata userOp) external view;\n\nfunction addUserAuthorization(address user) external returns (bool);\n\nfunction removeUserAuthorization(address user) external returns (bool);\n\n}"
			},
			"interfaces/UserOperation.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\nimport {calldataKeccak} from \"../core/Helpers.sol\";\n\n/**\n * User Operation struct\n * @param sender                - The sender account of this request.\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\n * @param initCode              - If set, the account contract will be created by this constructor/\n * @param callData              - The method call to execute on this account.\n * @param callGasLimit          - The gas limit passed to the callData method call.\n * @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n *                                Covers batch overhead.\n * @param maxFeePerGas          - Same as EIP-1559 gas parameter.\n * @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\n * @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\n *                                The paymaster will pay for the transaction instead of the sender.\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct UserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    uint256 callGasLimit;\n    uint256 verificationGasLimit;\n    uint256 preVerificationGas;\n    uint256 maxFeePerGas;\n    uint256 maxPriorityFeePerGas;\n    bytes paymasterAndData;\n    bytes signature;\n}\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n    /**\n     * Get sender from user operation data.\n     * @param userOp - The user operation data.\n     */\n    function getSender(\n        UserOperation calldata userOp\n    ) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {\n            data := calldataload(userOp)\n        }\n        return address(uint160(data));\n    }\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        UserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            uint256 maxFeePerGas = userOp.maxFeePerGas;\n            uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n            if (maxFeePerGas == maxPriorityFeePerGas) {\n                //legacy mode (for networks that don't support basefee opcode)\n                return maxFeePerGas;\n            }\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     */\n    function pack(\n        UserOperation calldata userOp\n    ) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        uint256 callGasLimit = userOp.callGasLimit;\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            callGasLimit, verificationGasLimit, preVerificationGas,\n            maxFeePerGas, maxPriorityFeePerGas,\n            hashPaymasterAndData\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     */\n    function hash(\n        UserOperation calldata userOp\n    ) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    /**\n     * The minimum of two numbers.\n     * @param a - First number.\n     * @param b - Second number.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n"
			},
			"core/Helpers.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * Returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and\n * parsed by `_parseValidationData`.\n * @param aggregator  - address(0) - The account validated the signature by itself.\n *                      address(1) - The account failed to validate the signature.\n *                      otherwise - This is an address of a signature aggregator that must\n *                                  be used to validate the signature.\n * @param validAfter  - This UserOp is valid only after this timestamp.\n * @param validaUntil - This UserOp is valid only up to this timestamp.\n */\nstruct ValidationData {\n    address aggregator;\n    uint48 validAfter;\n    uint48 validUntil;\n}\n\n/**\n * Extract sigFailed, validAfter, validUntil.\n * Also convert zero validUntil to type(uint48).max.\n * @param validationData - The packed validation data.\n */\nfunction _parseValidationData(\n    uint validationData\n) pure returns (ValidationData memory data) {\n    address aggregator = address(uint160(validationData));\n    uint48 validUntil = uint48(validationData >> 160);\n    if (validUntil == 0) {\n        validUntil = type(uint48).max;\n    }\n    uint48 validAfter = uint48(validationData >> (48 + 160));\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Intersect account and paymaster ranges.\n * @param validationData          - The packed validation data of the account.\n * @param paymasterValidationData - The packed validation data of the paymaster.\n */\nfunction _intersectTimeRange(\n    uint256 validationData,\n    uint256 paymasterValidationData\n) pure returns (ValidationData memory) {\n    ValidationData memory accountValidationData = _parseValidationData(\n        validationData\n    );\n    ValidationData memory pmValidationData = _parseValidationData(\n        paymasterValidationData\n    );\n    address aggregator = accountValidationData.aggregator;\n    if (aggregator == address(0)) {\n        aggregator = pmValidationData.aggregator;\n    }\n    uint48 validAfter = accountValidationData.validAfter;\n    uint48 validUntil = accountValidationData.validUntil;\n    uint48 pmValidAfter = pmValidationData.validAfter;\n    uint48 pmValidUntil = pmValidationData.validUntil;\n\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Helper to pack the return value for validateUserOp.\n * @param data - The ValidationData to pack.\n */\nfunction _packValidationData(\n    ValidationData memory data\n) pure returns (uint256) {\n    return\n        uint160(data.aggregator) |\n        (uint256(data.validUntil) << 160) |\n        (uint256(data.validAfter) << (160 + 48));\n}\n\n/**\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\n * @param sigFailed  - True for signature failure, false for success.\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n * @param validAfter - First timestamp this UserOperation is valid.\n */\nfunction _packValidationData(\n    bool sigFailed,\n    uint48 validUntil,\n    uint48 validAfter\n) pure returns (uint256) {\n    return\n        (sigFailed ? 1 : 0) |\n        (uint256(validUntil) << 160) |\n        (uint256(validAfter) << (160 + 48));\n}\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"interfaces/IAccountManager.sol": {
				"IAccountManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "addUserAuthorization",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "authorizeUserOp",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "removeUserAuthorization",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addUserAuthorization(address)": "e461f00d",
							"authorizeUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "9021ce1e",
							"removeUserAuthorization(address)": "cfef9c97"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addUserAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"authorizeUserOp\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeUserAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IAccountManager.sol\":\"IAccountManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"core/Helpers.sol\":{\"keccak256\":\"0x81b70ea6183fd28e6c00dc3cf357c8453abdd4cc46ec628e7589e4b6a188d626\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f4a99aced25a842721a2495760af84b874c1f730c94f8b3e76c71c8b757c90f5\",\"dweb:/ipfs/QmacEJqVFbwQxE4HTzqvWWAFT7uSbH2Yd7EMqdCx1DxzBz\"]},\"interfaces/IAccountManager.sol\":{\"keccak256\":\"0x52829dc9c3f27d9370be6553a33bb53f0a1ea14d5a044adacfff6647ce325aa0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6af5f16b456621bd835c877e2e936b858b241c238eabcf6d375f5754a78d2cdb\",\"dweb:/ipfs/Qmcd3YoKk5WbxfuBJtBJsEftGprBggNyw8aguhs2MAP8Q2\"]},\"interfaces/UserOperation.sol\":{\"keccak256\":\"0xb9778d418650d05b798dd2f1302ffc598411908f80296bb6ff391d0017f2a8bb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d3923a80ad02e77ba413caef2d4f71c7494bf8a3fd5fda753075310dbb9fe4b4\",\"dweb:/ipfs/QmYieD4jEHcbvVrRQPZ5VBScDZfGdeZWbFvkxDhnezNXR1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/UserOperation.sol": {
				"UserOperationLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"interfaces/UserOperation.sol\":1720:4462  library UserOperationLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"interfaces/UserOperation.sol\":1720:4462  library UserOperationLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220281b0be51c266bf7b9992a960ec8b7d9d19796ea027ff856ce5f00205e23c95364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220281b0be51c266bf7b9992a960ec8b7d9d19796ea027ff856ce5f00205e23c95364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SHL SIGNEXTEND 0xE5 SHR 0x26 PUSH12 0xF7B9992A960EC8B7D9D19796 0xEA MUL PUSH32 0xF856CE5F00205E23C95364736F6C634300081200330000000000000000000000 ",
							"sourceMap": "1720:2742:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220281b0be51c266bf7b9992a960ec8b7d9d19796ea027ff856ce5f00205e23c95364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SHL SIGNEXTEND 0xE5 SHR 0x26 PUSH12 0xF7B9992A960EC8B7D9D19796 0xEA MUL PUSH32 0xF856CE5F00205E23C95364736F6C634300081200330000000000000000000000 ",
							"sourceMap": "1720:2742:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"gasPrice(struct UserOperation calldata)": "infinite",
								"getSender(struct UserOperation calldata)": "infinite",
								"hash(struct UserOperation calldata)": "infinite",
								"min(uint256,uint256)": "infinite",
								"pack(struct UserOperation calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 4462,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220281b0be51c266bf7b9992a960ec8b7d9d19796ea027ff856ce5f00205e23c95364736f6c63430008120033",
									".code": [
										{
											"begin": 1720,
											"end": 4462,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 4462,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 4462,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1720,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 4462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 4462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 4462,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"core/Helpers.sol",
								"interfaces/IAccountManager.sol",
								"interfaces/UserOperation.sol",
								"samples/AccountManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"core/Helpers.sol\":{\"keccak256\":\"0x81b70ea6183fd28e6c00dc3cf357c8453abdd4cc46ec628e7589e4b6a188d626\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f4a99aced25a842721a2495760af84b874c1f730c94f8b3e76c71c8b757c90f5\",\"dweb:/ipfs/QmacEJqVFbwQxE4HTzqvWWAFT7uSbH2Yd7EMqdCx1DxzBz\"]},\"interfaces/UserOperation.sol\":{\"keccak256\":\"0xb9778d418650d05b798dd2f1302ffc598411908f80296bb6ff391d0017f2a8bb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d3923a80ad02e77ba413caef2d4f71c7494bf8a3fd5fda753075310dbb9fe4b4\",\"dweb:/ipfs/QmYieD4jEHcbvVrRQPZ5VBScDZfGdeZWbFvkxDhnezNXR1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Utility functions helpful when working with UserOperation structs.",
						"version": 1
					}
				}
			},
			"samples/AccountManager.sol": {
				"AccountManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_masterWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "addUserAuthorization",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "authorizeUserOp",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedUsers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "masterWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "removeUserAuthorization",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"samples/AccountManager.sol\":149:981  contract AccountManager is IAccountManager {... */\n  mstore(0x40, 0xa0)\n    /* \"samples/AccountManager.sol\":297:377  constructor(address _masterWallet) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"samples/AccountManager.sol\":357:370  _masterWallet */\n  dup1\n    /* \"samples/AccountManager.sol\":342:370  masterWallet = _masterWallet */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"samples/AccountManager.sol\":297:377  constructor(address _masterWallet) {... */\n  pop\n    /* \"samples/AccountManager.sol\":149:981  contract AccountManager is IAccountManager {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"samples/AccountManager.sol\":149:981  contract AccountManager is IAccountManager {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8af27cf74aac2688cd726c07a54289d4ba183944dedc36dfdfdf457c8a8d2e11\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"samples/AccountManager.sol\":149:981  contract AccountManager is IAccountManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1828983a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9021ce1e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xcfef9c97\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe461f00d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0d0117\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"samples/AccountManager.sol\":243:290  mapping(address => bool) public authorizedUsers */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/AccountManager.sol\":383:532  function authorizeUserOp(UserOperation calldata userOp) external view {... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"samples/AccountManager.sol\":695:850  function removeUserAuthorization(address user) external onlyMasterWallet returns (bool) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/AccountManager.sol\":538:689  function addUserAuthorization(address user) external onlyMasterWallet returns (bool) {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/AccountManager.sol\":199:236  address public immutable masterWallet */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"samples/AccountManager.sol\":243:290  mapping(address => bool) public authorizedUsers */\n    tag_11:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"samples/AccountManager.sol\":383:532  function authorizeUserOp(UserOperation calldata userOp) external view {... */\n    tag_17:\n        /* \"samples/AccountManager.sol\":471:486  authorizedUsers */\n      0x00\n        /* \"samples/AccountManager.sol\":471:501  authorizedUsers[userOp.sender] */\n      dup1\n        /* \"samples/AccountManager.sol\":487:493  userOp */\n      dup3\n        /* \"samples/AccountManager.sol\":487:500  userOp.sender */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_31:\n        /* \"samples/AccountManager.sol\":471:501  authorizedUsers[userOp.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"samples/AccountManager.sol\":463:525  require(authorizedUsers[userOp.sender], \"User not authorized\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"samples/AccountManager.sol\":383:532  function authorizeUserOp(UserOperation calldata userOp) external view {... */\n      pop\n      jump\t// out\n        /* \"samples/AccountManager.sol\":695:850  function removeUserAuthorization(address user) external onlyMasterWallet returns (bool) {... */\n    tag_20:\n        /* \"samples/AccountManager.sol\":777:781  bool */\n      0x00\n        /* \"samples/AccountManager.sol\":916:928  masterWallet */\n      immutable(\"0x8af27cf74aac2688cd726c07a54289d4ba183944dedc36dfdfdf457c8a8d2e11\")\n        /* \"samples/AccountManager.sol\":902:928  msg.sender == masterWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"samples/AccountManager.sol\":902:912  msg.sender */\n      caller\n        /* \"samples/AccountManager.sol\":902:928  msg.sender == masterWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"samples/AccountManager.sol\":894:960  require(msg.sender == masterWallet, \"Only master wallet can call\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"samples/AccountManager.sol\":817:822  false */\n      0x00\n        /* \"samples/AccountManager.sol\":793:808  authorizedUsers */\n      dup1\n        /* \"samples/AccountManager.sol\":793:814  authorizedUsers[user] */\n      0x00\n        /* \"samples/AccountManager.sol\":809:813  user */\n      dup5\n        /* \"samples/AccountManager.sol\":793:814  authorizedUsers[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"samples/AccountManager.sol\":793:822  authorizedUsers[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"samples/AccountManager.sol\":839:843  true */\n      0x01\n        /* \"samples/AccountManager.sol\":832:843  return true */\n      swap1\n      pop\n        /* \"samples/AccountManager.sol\":695:850  function removeUserAuthorization(address user) external onlyMasterWallet returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"samples/AccountManager.sol\":538:689  function addUserAuthorization(address user) external onlyMasterWallet returns (bool) {... */\n    tag_24:\n        /* \"samples/AccountManager.sol\":617:621  bool */\n      0x00\n        /* \"samples/AccountManager.sol\":916:928  masterWallet */\n      immutable(\"0x8af27cf74aac2688cd726c07a54289d4ba183944dedc36dfdfdf457c8a8d2e11\")\n        /* \"samples/AccountManager.sol\":902:928  msg.sender == masterWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"samples/AccountManager.sol\":902:912  msg.sender */\n      caller\n        /* \"samples/AccountManager.sol\":902:928  msg.sender == masterWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"samples/AccountManager.sol\":894:960  require(msg.sender == masterWallet, \"Only master wallet can call\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_38\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"samples/AccountManager.sol\":657:661  true */\n      0x01\n        /* \"samples/AccountManager.sol\":633:648  authorizedUsers */\n      0x00\n        /* \"samples/AccountManager.sol\":633:654  authorizedUsers[user] */\n      dup1\n        /* \"samples/AccountManager.sol\":649:653  user */\n      dup5\n        /* \"samples/AccountManager.sol\":633:654  authorizedUsers[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"samples/AccountManager.sol\":633:661  authorizedUsers[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"samples/AccountManager.sol\":678:682  true */\n      0x01\n        /* \"samples/AccountManager.sol\":671:682  return true */\n      swap1\n      pop\n        /* \"samples/AccountManager.sol\":538:689  function addUserAuthorization(address user) external onlyMasterWallet returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"samples/AccountManager.sol\":199:236  address public immutable masterWallet */\n    tag_27:\n      immutable(\"0x8af27cf74aac2688cd726c07a54289d4ba183944dedc36dfdfdf457c8a8d2e11\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_45:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_46:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_47:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_48:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_67\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_47\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_49:\n        /* \"#utility.yul\":641:665   */\n      tag_69\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_48\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_70:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_50:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_72\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_49\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_75\n      tag_45\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":917:1036   */\n    tag_74:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_76\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_50\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_51:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_52:\n        /* \"#utility.yul\":1353:1374   */\n      tag_79\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_51\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_13:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_81\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_52\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1720   */\n    tag_53:\n        /* \"#utility.yul\":1712:1713   */\n      0x00\n        /* \"#utility.yul\":1709:1710   */\n      dup1\n        /* \"#utility.yul\":1702:1714   */\n      revert\n        /* \"#utility.yul\":1754:1991   */\n    tag_54:\n        /* \"#utility.yul\":1832:1837   */\n      0x00\n        /* \"#utility.yul\":1873:1876   */\n      0x0160\n        /* \"#utility.yul\":1864:1870   */\n      dup3\n        /* \"#utility.yul\":1859:1862   */\n      dup5\n        /* \"#utility.yul\":1855:1871   */\n      sub\n        /* \"#utility.yul\":1851:1877   */\n      slt\n        /* \"#utility.yul\":1848:1961   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1880:1959   */\n      tag_85\n      tag_53\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1848:1961   */\n    tag_84:\n        /* \"#utility.yul\":1979:1985   */\n      dup2\n        /* \"#utility.yul\":1970:1985   */\n      swap1\n      pop\n        /* \"#utility.yul\":1754:1991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1997:2550   */\n    tag_16:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_88\n      tag_45\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2105:2224   */\n    tag_87:\n        /* \"#utility.yul\":2291:2292   */\n      0x00\n        /* \"#utility.yul\":2280:2289   */\n      dup3\n        /* \"#utility.yul\":2276:2293   */\n      add\n        /* \"#utility.yul\":2263:2294   */\n      calldataload\n        /* \"#utility.yul\":2321:2339   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2313:2319   */\n      dup2\n        /* \"#utility.yul\":2310:2340   */\n      gt\n        /* \"#utility.yul\":2307:2424   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2343:2422   */\n      tag_90\n      tag_46\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2307:2424   */\n    tag_89:\n        /* \"#utility.yul\":2448:2533   */\n      tag_91\n        /* \"#utility.yul\":2525:2532   */\n      dup5\n        /* \"#utility.yul\":2516:2522   */\n      dup3\n        /* \"#utility.yul\":2505:2514   */\n      dup6\n        /* \"#utility.yul\":2501:2523   */\n      add\n        /* \"#utility.yul\":2448:2533   */\n      tag_54\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2438:2533   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2543   */\n      pop\n        /* \"#utility.yul\":1997:2550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2556:2674   */\n    tag_55:\n        /* \"#utility.yul\":2643:2667   */\n      tag_93\n        /* \"#utility.yul\":2661:2666   */\n      dup2\n        /* \"#utility.yul\":2643:2667   */\n      tag_48\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2638:2641   */\n      dup3\n        /* \"#utility.yul\":2631:2668   */\n      mstore\n        /* \"#utility.yul\":2556:2674   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2680:2902   */\n    tag_29:\n        /* \"#utility.yul\":2773:2777   */\n      0x00\n        /* \"#utility.yul\":2811:2813   */\n      0x20\n        /* \"#utility.yul\":2800:2809   */\n      dup3\n        /* \"#utility.yul\":2796:2814   */\n      add\n        /* \"#utility.yul\":2788:2814   */\n      swap1\n      pop\n        /* \"#utility.yul\":2824:2895   */\n      tag_95\n        /* \"#utility.yul\":2892:2893   */\n      0x00\n        /* \"#utility.yul\":2881:2890   */\n      dup4\n        /* \"#utility.yul\":2877:2894   */\n      add\n        /* \"#utility.yul\":2868:2874   */\n      dup5\n        /* \"#utility.yul\":2824:2895   */\n      tag_55\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2680:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:3077   */\n    tag_56:\n        /* \"#utility.yul\":2992:3003   */\n      0x00\n        /* \"#utility.yul\":3026:3032   */\n      dup3\n        /* \"#utility.yul\":3021:3024   */\n      dup3\n        /* \"#utility.yul\":3014:3033   */\n      mstore\n        /* \"#utility.yul\":3066:3070   */\n      0x20\n        /* \"#utility.yul\":3061:3064   */\n      dup3\n        /* \"#utility.yul\":3057:3071   */\n      add\n        /* \"#utility.yul\":3042:3071   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:3077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3083:3252   */\n    tag_57:\n        /* \"#utility.yul\":3223:3244   */\n      0x55736572206e6f7420617574686f72697a656400000000000000000000000000\n        /* \"#utility.yul\":3219:3220   */\n      0x00\n        /* \"#utility.yul\":3211:3217   */\n      dup3\n        /* \"#utility.yul\":3207:3221   */\n      add\n        /* \"#utility.yul\":3200:3245   */\n      mstore\n        /* \"#utility.yul\":3083:3252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3258:3624   */\n    tag_58:\n        /* \"#utility.yul\":3400:3403   */\n      0x00\n        /* \"#utility.yul\":3421:3488   */\n      tag_99\n        /* \"#utility.yul\":3485:3487   */\n      0x13\n        /* \"#utility.yul\":3480:3483   */\n      dup4\n        /* \"#utility.yul\":3421:3488   */\n      tag_56\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3414:3488   */\n      swap2\n      pop\n        /* \"#utility.yul\":3497:3590   */\n      tag_100\n        /* \"#utility.yul\":3586:3589   */\n      dup3\n        /* \"#utility.yul\":3497:3590   */\n      tag_57\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3615:3617   */\n      0x20\n        /* \"#utility.yul\":3610:3613   */\n      dup3\n        /* \"#utility.yul\":3606:3618   */\n      add\n        /* \"#utility.yul\":3599:3618   */\n      swap1\n      pop\n        /* \"#utility.yul\":3258:3624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:4049   */\n    tag_34:\n        /* \"#utility.yul\":3796:3800   */\n      0x00\n        /* \"#utility.yul\":3834:3836   */\n      0x20\n        /* \"#utility.yul\":3823:3832   */\n      dup3\n        /* \"#utility.yul\":3819:3837   */\n      add\n        /* \"#utility.yul\":3811:3837   */\n      swap1\n      pop\n        /* \"#utility.yul\":3883:3892   */\n      dup2\n        /* \"#utility.yul\":3877:3881   */\n      dup2\n        /* \"#utility.yul\":3873:3893   */\n      sub\n        /* \"#utility.yul\":3869:3870   */\n      0x00\n        /* \"#utility.yul\":3858:3867   */\n      dup4\n        /* \"#utility.yul\":3854:3871   */\n      add\n        /* \"#utility.yul\":3847:3894   */\n      mstore\n        /* \"#utility.yul\":3911:4042   */\n      tag_102\n        /* \"#utility.yul\":4037:4041   */\n      dup2\n        /* \"#utility.yul\":3911:4042   */\n      tag_58\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3903:4042   */\n      swap1\n      pop\n        /* \"#utility.yul\":3630:4049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4055:4232   */\n    tag_59:\n        /* \"#utility.yul\":4195:4224   */\n      0x4f6e6c79206d61737465722077616c6c65742063616e2063616c6c0000000000\n        /* \"#utility.yul\":4191:4192   */\n      0x00\n        /* \"#utility.yul\":4183:4189   */\n      dup3\n        /* \"#utility.yul\":4179:4193   */\n      add\n        /* \"#utility.yul\":4172:4225   */\n      mstore\n        /* \"#utility.yul\":4055:4232   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4238:4604   */\n    tag_60:\n        /* \"#utility.yul\":4380:4383   */\n      0x00\n        /* \"#utility.yul\":4401:4468   */\n      tag_105\n        /* \"#utility.yul\":4465:4467   */\n      0x1b\n        /* \"#utility.yul\":4460:4463   */\n      dup4\n        /* \"#utility.yul\":4401:4468   */\n      tag_56\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":4394:4468   */\n      swap2\n      pop\n        /* \"#utility.yul\":4477:4570   */\n      tag_106\n        /* \"#utility.yul\":4566:4569   */\n      dup3\n        /* \"#utility.yul\":4477:4570   */\n      tag_59\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4595:4597   */\n      0x20\n        /* \"#utility.yul\":4590:4593   */\n      dup3\n        /* \"#utility.yul\":4586:4598   */\n      add\n        /* \"#utility.yul\":4579:4598   */\n      swap1\n      pop\n        /* \"#utility.yul\":4238:4604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4610:5029   */\n    tag_38:\n        /* \"#utility.yul\":4776:4780   */\n      0x00\n        /* \"#utility.yul\":4814:4816   */\n      0x20\n        /* \"#utility.yul\":4803:4812   */\n      dup3\n        /* \"#utility.yul\":4799:4817   */\n      add\n        /* \"#utility.yul\":4791:4817   */\n      swap1\n      pop\n        /* \"#utility.yul\":4863:4872   */\n      dup2\n        /* \"#utility.yul\":4857:4861   */\n      dup2\n        /* \"#utility.yul\":4853:4873   */\n      sub\n        /* \"#utility.yul\":4849:4850   */\n      0x00\n        /* \"#utility.yul\":4838:4847   */\n      dup4\n        /* \"#utility.yul\":4834:4851   */\n      add\n        /* \"#utility.yul\":4827:4874   */\n      mstore\n        /* \"#utility.yul\":4891:5022   */\n      tag_108\n        /* \"#utility.yul\":5017:5021   */\n      dup2\n        /* \"#utility.yul\":4891:5022   */\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4883:5022   */\n      swap1\n      pop\n        /* \"#utility.yul\":4610:5029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a8e95831b0035fa76b8986eb74ebe1713d3d5e4fd53b8e73a60090c8738e486f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_487": {
									"entryPoint": null,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051610791380380610791833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161066c610125600039600081816101ea015281816102da01526103c8015261066c6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631828983a1461005c5780639021ce1e1461008c578063cfef9c97146100a8578063e461f00d146100d8578063fc0d011714610108575b600080fd5b61007660048036038101906100719190610452565b610126565b604051610083919061049a565b60405180910390f35b6100a660048036038101906100a191906104da565b610146565b005b6100c260048036038101906100bd9190610452565b6101e6565b6040516100cf919061049a565b60405180910390f35b6100f260048036038101906100ed9190610452565b6102d6565b6040516100ff919061049a565b60405180910390f35b6101106103c6565b60405161011d9190610532565b60405180910390f35b60006020528060005260406000206000915054906101000a900460ff1681565b60008082600001602081019061015c9190610452565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da906105aa565b60405180910390fd5b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d90610616565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035d90610616565b60405180910390fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061041f826103f4565b9050919050565b61042f81610414565b811461043a57600080fd5b50565b60008135905061044c81610426565b92915050565b600060208284031215610468576104676103ea565b5b60006104768482850161043d565b91505092915050565b60008115159050919050565b6104948161047f565b82525050565b60006020820190506104af600083018461048b565b92915050565b600080fd5b600061016082840312156104d1576104d06104b5565b5b81905092915050565b6000602082840312156104f0576104ef6103ea565b5b600082013567ffffffffffffffff81111561050e5761050d6103ef565b5b61051a848285016104ba565b91505092915050565b61052c81610414565b82525050565b60006020820190506105476000830184610523565b92915050565b600082825260208201905092915050565b7f55736572206e6f7420617574686f72697a656400000000000000000000000000600082015250565b600061059460138361054d565b915061059f8261055e565b602082019050919050565b600060208201905081810360008301526105c381610587565b9050919050565b7f4f6e6c79206d61737465722077616c6c65742063616e2063616c6c0000000000600082015250565b6000610600601b8361054d565b915061060b826105ca565b602082019050919050565b6000602082019050818103600083015261062f816105f3565b905091905056fea2646970667358221220a8e95831b0035fa76b8986eb74ebe1713d3d5e4fd53b8e73a60090c8738e486f64736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x791 CODESIZE SUB DUP1 PUSH2 0x791 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0xFC JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C DUP3 PUSH2 0x71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC DUP2 PUSH2 0x91 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9 DUP2 PUSH2 0xA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5 JUMPI PUSH2 0xE4 PUSH2 0x6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3 DUP5 DUP3 DUP6 ADD PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x66C PUSH2 0x125 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1EA ADD MSTORE DUP2 DUP2 PUSH2 0x2DA ADD MSTORE PUSH2 0x3C8 ADD MSTORE PUSH2 0x66C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1828983A EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9021CE1E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xCFEF9C97 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xE461F00D EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xFC0D0117 EQ PUSH2 0x108 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42F DUP2 PUSH2 0x414 JUMP JUMPDEST DUP2 EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44C DUP2 PUSH2 0x426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x3EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x476 DUP5 DUP3 DUP6 ADD PUSH2 0x43D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x494 DUP2 PUSH2 0x47F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x48B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x4B5 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F0 JUMPI PUSH2 0x4EF PUSH2 0x3EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH2 0x51A DUP5 DUP3 DUP6 ADD PUSH2 0x4BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x52C DUP2 PUSH2 0x414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x547 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55736572206E6F7420617574686F72697A656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x594 PUSH1 0x13 DUP4 PUSH2 0x54D JUMP JUMPDEST SWAP2 POP PUSH2 0x59F DUP3 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C3 DUP2 PUSH2 0x587 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206D61737465722077616C6C65742063616E2063616C6C0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 PUSH1 0x1B DUP4 PUSH2 0x54D JUMP JUMPDEST SWAP2 POP PUSH2 0x60B DUP3 PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x62F DUP2 PUSH2 0x5F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xE9 PC BALANCE 0xB0 SUB 0x5F 0xA7 PUSH12 0x8986EB74EBE1713D3D5E4FD5 EXTCODESIZE DUP15 PUSH20 0xA60090C8738E486F64736F6C6343000812003300 ",
							"sourceMap": "149:832:3:-:0;;;297:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;357:13;342:28;;;;;;;;;;297:80;149:832;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;149:832:3:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addUserAuthorization_520": {
									"entryPoint": 726,
									"id": 520,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@authorizeUserOp_502": {
									"entryPoint": 326,
									"id": 502,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizedUsers_477": {
									"entryPoint": 294,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@masterWallet_473": {
									"entryPoint": 966,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeUserAuthorization_538": {
									"entryPoint": 486,
									"id": 538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_UserOperation_$290_calldata_ptr": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_UserOperation_$290_calldata_ptr": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 1205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5032:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:4",
														"type": ""
													}
												],
												"src": "1176:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:4",
														"type": ""
													}
												],
												"src": "1272:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:4",
														"type": ""
													}
												],
												"src": "1387:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1692:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:12:4"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nodeType": "YulFunctionDefinition",
												"src": "1603:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1838:153:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1878:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nodeType": "YulIdentifier",
																				"src": "1880:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1859:3:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1864:6:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1855:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1855:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1873:3:4",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:26:4"
															},
															"nodeType": "YulIf",
															"src": "1848:113:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1970:15:4",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1979:6:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1970:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_UserOperation_$290_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1816:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1824:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1832:5:4",
														"type": ""
													}
												],
												"src": "1754:237:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:455:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:4"
															},
															"nodeType": "YulIf",
															"src": "2105:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2234:309:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2280:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2291:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2276:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2276:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2263:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2263:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2341:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2343:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2343:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2343:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2313:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2321:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2310:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2310:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "2307:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2438:95:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2505:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2516:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2501:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2501:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2525:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_UserOperation_$290_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2448:52:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:85:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2438:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_UserOperation_$290_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2076:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2088:6:4",
														"type": ""
													}
												],
												"src": "1997:553:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2621:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2638:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2661:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2643:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2643:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2631:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2631:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2609:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2616:3:4",
														"type": ""
													}
												],
												"src": "2556:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2778:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2788:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2800:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2811:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2796:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2788:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2868:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2881:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2892:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2877:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2877:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2824:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2824:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2750:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2762:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2773:4:4",
														"type": ""
													}
												],
												"src": "2680:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3004:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3021:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3026:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3014:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3042:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3061:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3057:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3042:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2976:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2981:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2992:11:4",
														"type": ""
													}
												],
												"src": "2908:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3189:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3211:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3219:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3207:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3207:14:4"
																	},
																	{
																		"hexValue": "55736572206e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3223:21:4",
																		"type": "",
																		"value": "User not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3200:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3200:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3181:6:4",
														"type": ""
													}
												],
												"src": "3083:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3414:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3480:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3485:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3421:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3414:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3586:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49",
																	"nodeType": "YulIdentifier",
																	"src": "3497:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3497:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3599:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3610:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3606:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3606:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3392:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3400:3:4",
														"type": ""
													}
												],
												"src": "3258:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3801:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3811:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3823:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3834:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3811:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3858:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3869:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3854:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3854:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3877:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3883:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3847:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3847:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3847:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3903:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4037:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3911:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3903:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3781:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3796:4:4",
														"type": ""
													}
												],
												"src": "3630:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4161:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4183:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4191:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:14:4"
																	},
																	{
																		"hexValue": "4f6e6c79206d61737465722077616c6c65742063616e2063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4195:29:4",
																		"type": "",
																		"value": "Only master wallet can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4172:53:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4172:53:4"
														}
													]
												},
												"name": "store_literal_in_memory_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4153:6:4",
														"type": ""
													}
												],
												"src": "4055:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4384:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4394:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4460:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4465:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4401:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4566:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b",
																	"nodeType": "YulIdentifier",
																	"src": "4477:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4477:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4477:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4579:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4590:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4595:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4586:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4579:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4372:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4380:3:4",
														"type": ""
													}
												],
												"src": "4238:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4781:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4791:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4803:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4814:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4799:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4838:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4849:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4834:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4834:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4857:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4863:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4853:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4853:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4883:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5017:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4891:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4883:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4761:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4776:4:4",
														"type": ""
													}
												],
												"src": "4610:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct UserOperation\n    function abi_decode_t_struct$_UserOperation_$290_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 352) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$290_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$290_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49(memPtr) {\n\n        mstore(add(memPtr, 0), \"User not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only master wallet can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"473": [
									{
										"length": 32,
										"start": 490
									},
									{
										"length": 32,
										"start": 730
									},
									{
										"length": 32,
										"start": 968
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631828983a1461005c5780639021ce1e1461008c578063cfef9c97146100a8578063e461f00d146100d8578063fc0d011714610108575b600080fd5b61007660048036038101906100719190610452565b610126565b604051610083919061049a565b60405180910390f35b6100a660048036038101906100a191906104da565b610146565b005b6100c260048036038101906100bd9190610452565b6101e6565b6040516100cf919061049a565b60405180910390f35b6100f260048036038101906100ed9190610452565b6102d6565b6040516100ff919061049a565b60405180910390f35b6101106103c6565b60405161011d9190610532565b60405180910390f35b60006020528060005260406000206000915054906101000a900460ff1681565b60008082600001602081019061015c9190610452565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da906105aa565b60405180910390fd5b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d90610616565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035d90610616565b60405180910390fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061041f826103f4565b9050919050565b61042f81610414565b811461043a57600080fd5b50565b60008135905061044c81610426565b92915050565b600060208284031215610468576104676103ea565b5b60006104768482850161043d565b91505092915050565b60008115159050919050565b6104948161047f565b82525050565b60006020820190506104af600083018461048b565b92915050565b600080fd5b600061016082840312156104d1576104d06104b5565b5b81905092915050565b6000602082840312156104f0576104ef6103ea565b5b600082013567ffffffffffffffff81111561050e5761050d6103ef565b5b61051a848285016104ba565b91505092915050565b61052c81610414565b82525050565b60006020820190506105476000830184610523565b92915050565b600082825260208201905092915050565b7f55736572206e6f7420617574686f72697a656400000000000000000000000000600082015250565b600061059460138361054d565b915061059f8261055e565b602082019050919050565b600060208201905081810360008301526105c381610587565b9050919050565b7f4f6e6c79206d61737465722077616c6c65742063616e2063616c6c0000000000600082015250565b6000610600601b8361054d565b915061060b826105ca565b602082019050919050565b6000602082019050818103600083015261062f816105f3565b905091905056fea2646970667358221220a8e95831b0035fa76b8986eb74ebe1713d3d5e4fd53b8e73a60090c8738e486f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1828983A EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9021CE1E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xCFEF9C97 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xE461F00D EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xFC0D0117 EQ PUSH2 0x108 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42F DUP2 PUSH2 0x414 JUMP JUMPDEST DUP2 EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44C DUP2 PUSH2 0x426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x3EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x476 DUP5 DUP3 DUP6 ADD PUSH2 0x43D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x494 DUP2 PUSH2 0x47F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x48B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x4B5 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F0 JUMPI PUSH2 0x4EF PUSH2 0x3EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH2 0x51A DUP5 DUP3 DUP6 ADD PUSH2 0x4BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x52C DUP2 PUSH2 0x414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x547 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55736572206E6F7420617574686F72697A656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x594 PUSH1 0x13 DUP4 PUSH2 0x54D JUMP JUMPDEST SWAP2 POP PUSH2 0x59F DUP3 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C3 DUP2 PUSH2 0x587 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206D61737465722077616C6C65742063616E2063616C6C0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 PUSH1 0x1B DUP4 PUSH2 0x54D JUMP JUMPDEST SWAP2 POP PUSH2 0x60B DUP3 PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x62F DUP2 PUSH2 0x5F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xE9 PC BALANCE 0xB0 SUB 0x5F 0xA7 PUSH12 0x8986EB74EBE1713D3D5E4FD5 EXTCODESIZE DUP15 PUSH20 0xA60090C8738E486F64736F6C6343000812003300 ",
							"sourceMap": "149:832:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;243:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;695:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;199:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;243:47;;;;;;;;;;;;;;;;;;;;;;:::o;383:149::-;471:15;:30;487:6;:13;;;;;;;;;;:::i;:::-;471:30;;;;;;;;;;;;;;;;;;;;;;;;;463:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;383:149;:::o;695:155::-;777:4;916:12;902:26;;:10;:26;;;894:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;817:5:::1;793:15:::0;:21:::1;809:4;793:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;839:4;832:11;;695:155:::0;;;:::o;538:151::-;617:4;916:12;902:26;;:10;:26;;;894:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;657:4:::1;633:15;:21:::0;649:4:::1;633:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;678:4;671:11;;538:151:::0;;;:::o;199:37::-;;;:::o;88:117:4:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:117::-;1712:1;1709;1702:12;1754:237;1832:5;1873:3;1864:6;1859:3;1855:16;1851:26;1848:113;;;1880:79;;:::i;:::-;1848:113;1979:6;1970:15;;1754:237;;;;:::o;1997:553::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2291:1;2280:9;2276:17;2263:31;2321:18;2313:6;2310:30;2307:117;;;2343:79;;:::i;:::-;2307:117;2448:85;2525:7;2516:6;2505:9;2501:22;2448:85;:::i;:::-;2438:95;;2234:309;1997:553;;;;:::o;2556:118::-;2643:24;2661:5;2643:24;:::i;:::-;2638:3;2631:37;2556:118;;:::o;2680:222::-;2773:4;2811:2;2800:9;2796:18;2788:26;;2824:71;2892:1;2881:9;2877:17;2868:6;2824:71;:::i;:::-;2680:222;;;;:::o;2908:169::-;2992:11;3026:6;3021:3;3014:19;3066:4;3061:3;3057:14;3042:29;;2908:169;;;;:::o;3083:::-;3223:21;3219:1;3211:6;3207:14;3200:45;3083:169;:::o;3258:366::-;3400:3;3421:67;3485:2;3480:3;3421:67;:::i;:::-;3414:74;;3497:93;3586:3;3497:93;:::i;:::-;3615:2;3610:3;3606:12;3599:19;;3258:366;;;:::o;3630:419::-;3796:4;3834:2;3823:9;3819:18;3811:26;;3883:9;3877:4;3873:20;3869:1;3858:9;3854:17;3847:47;3911:131;4037:4;3911:131;:::i;:::-;3903:139;;3630:419;;;:::o;4055:177::-;4195:29;4191:1;4183:6;4179:14;4172:53;4055:177;:::o;4238:366::-;4380:3;4401:67;4465:2;4460:3;4401:67;:::i;:::-;4394:74;;4477:93;4566:3;4477:93;:::i;:::-;4595:2;4590:3;4586:12;4579:19;;4238:366;;;:::o;4610:419::-;4776:4;4814:2;4803:9;4799:18;4791:26;;4863:9;4857:4;4853:20;4849:1;4838:9;4834:17;4827:47;4891:131;5017:4;4891:131;:::i;:::-;4883:139;;4610:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "328800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addUserAuthorization(address)": "infinite",
								"authorizeUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "3212",
								"authorizedUsers(address)": "2823",
								"masterWallet()": "infinite",
								"removeUserAuthorization(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 377,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 377,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 377,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 377,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 377,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 297,
									"end": 377,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 297,
									"end": 377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 297,
									"end": 377,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 357,
									"end": 370,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 342,
									"end": 370,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 342,
									"end": 370,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 342,
									"end": 370,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 342,
									"end": 370,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 342,
									"end": 370,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 342,
									"end": 370,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 342,
									"end": 370,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 342,
									"end": 370,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 342,
									"end": 370,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 342,
									"end": 370,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 297,
									"end": 377,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 149,
									"end": 981,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "473"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 981,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8e95831b0035fa76b8986eb74ebe1713d3d5e4fd53b8e73a60090c8738e486f64736f6c63430008120033",
									".code": [
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "1828983A"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "9021CE1E"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "CFEF9C97"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "E461F00D"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "FC0D0117"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 149,
											"end": 981,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 383,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 383,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 695,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 695,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 538,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 538,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 538,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 199,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 199,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 243,
											"end": 290,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 243,
											"end": 290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 383,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 471,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 487,
											"end": 493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 487,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 487,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 487,
											"end": 500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 487,
											"end": 500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 487,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 487,
											"end": 500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 487,
											"end": 500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 487,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 500,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 487,
											"end": 500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 471,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 471,
											"end": 501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 463,
											"end": 525,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 525,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 463,
											"end": 525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 463,
											"end": 525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 463,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 463,
											"end": 525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 525,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 463,
											"end": 525,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 463,
											"end": 525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 383,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 777,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 928,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 902,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 912,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 902,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 928,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 894,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 813,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 793,
											"end": 814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 793,
											"end": 822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 832,
											"end": 843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 695,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 538,
											"end": 689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 928,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 902,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 912,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 902,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 928,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 894,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 894,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 894,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 657,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 633,
											"end": 648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 649,
											"end": 653,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 633,
											"end": 654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 633,
											"end": 661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 678,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 671,
											"end": 682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 199,
											"end": 236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 199,
											"end": 236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 1720,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1603,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1714,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1991,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1754,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1876,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1862,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1877,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1880,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1848,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1991,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2550,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1997,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2340,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2307,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2343,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2343,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2422,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2343,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2307,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2448,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2533,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2448,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2234,
											"end": 2543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2674,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2556,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2661,
											"end": 2666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2643,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2667,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2643,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2641,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2680,
											"end": 2902,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2680,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2777,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2814,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2824,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2824,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2824,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2824,
											"end": 2895,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2824,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2680,
											"end": 2902,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2680,
											"end": 2902,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2680,
											"end": 2902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2680,
											"end": 2902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2680,
											"end": 2902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3077,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2908,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 3003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3032,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3064,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3071,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3077,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3252,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3083,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3244,
											"name": "PUSH",
											"source": 4,
											"value": "55736572206E6F7420617574686F72697A656400000000000000000000000000"
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3217,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3207,
											"end": 3221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3200,
											"end": 3245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3624,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3258,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3485,
											"end": 3487,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3480,
											"end": 3483,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3421,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3488,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3421,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 3488,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 3488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3586,
											"end": 3589,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3497,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3590,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3497,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3599,
											"end": 3618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3599,
											"end": 3618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3624,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 4049,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3630,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 3892,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3881,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3893,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4037,
											"end": 4041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3911,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 4042,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3911,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 4049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 4049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 4049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 4049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4055,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C79206D61737465722077616C6C65742063616E2063616C6C0000000000"
										},
										{
											"begin": 4191,
											"end": 4192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4172,
											"end": 4225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4604,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4238,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4380,
											"end": 4383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4465,
											"end": 4467,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 4460,
											"end": 4463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4401,
											"end": 4468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4468,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4401,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4394,
											"end": 4468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4394,
											"end": 4468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4477,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4566,
											"end": 4569,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4477,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4477,
											"end": 4570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4477,
											"end": 4570,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4477,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 5029,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4610,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4816,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4803,
											"end": 4812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4791,
											"end": 4817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4791,
											"end": 4817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4857,
											"end": 4861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 4873,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4847,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4827,
											"end": 4874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5017,
											"end": 5021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4891,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 5022,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4891,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 5022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 5022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 5029,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 5029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 5029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 5029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"core/Helpers.sol",
								"interfaces/IAccountManager.sol",
								"interfaces/UserOperation.sol",
								"samples/AccountManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addUserAuthorization(address)": "e461f00d",
							"authorizeUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "9021ce1e",
							"authorizedUsers(address)": "1828983a",
							"masterWallet()": "fc0d0117",
							"removeUserAuthorization(address)": "cfef9c97"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addUserAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"authorizeUserOp\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeUserAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"samples/AccountManager.sol\":\"AccountManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"core/Helpers.sol\":{\"keccak256\":\"0x81b70ea6183fd28e6c00dc3cf357c8453abdd4cc46ec628e7589e4b6a188d626\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f4a99aced25a842721a2495760af84b874c1f730c94f8b3e76c71c8b757c90f5\",\"dweb:/ipfs/QmacEJqVFbwQxE4HTzqvWWAFT7uSbH2Yd7EMqdCx1DxzBz\"]},\"interfaces/IAccountManager.sol\":{\"keccak256\":\"0x52829dc9c3f27d9370be6553a33bb53f0a1ea14d5a044adacfff6647ce325aa0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6af5f16b456621bd835c877e2e936b858b241c238eabcf6d375f5754a78d2cdb\",\"dweb:/ipfs/Qmcd3YoKk5WbxfuBJtBJsEftGprBggNyw8aguhs2MAP8Q2\"]},\"interfaces/UserOperation.sol\":{\"keccak256\":\"0xb9778d418650d05b798dd2f1302ffc598411908f80296bb6ff391d0017f2a8bb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d3923a80ad02e77ba413caef2d4f71c7494bf8a3fd5fda753075310dbb9fe4b4\",\"dweb:/ipfs/QmYieD4jEHcbvVrRQPZ5VBScDZfGdeZWbFvkxDhnezNXR1\"]},\"samples/AccountManager.sol\":{\"keccak256\":\"0x90cacd290a8db0ca54baa14915020df58bfaba9a2c81a32e455a4c3745e1d5e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce2b2ca9cae08e25828a336544f144da3e320e9ae9408cb90970ad22c3630ccb\",\"dweb:/ipfs/QmXEyumKMMmvvbcSJ4QhPxiKi1h6W7TSQCtWXk7ckBmjMF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 477,
								"contract": "samples/AccountManager.sol:AccountManager",
								"label": "authorizedUsers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"core/Helpers.sol": {
				"ast": {
					"absolutePath": "core/Helpers.sol",
					"exportedSymbols": {
						"ValidationData": [
							8
						],
						"_intersectTimeRange": [
							154
						],
						"_packValidationData": [
							191,
							229
						],
						"_parseValidationData": [
							68
						],
						"calldataKeccak": [
							239
						]
					},
					"id": 240,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"canonicalName": "ValidationData",
							"id": 8,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "aggregator",
									"nameLocation": "780:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 8,
									"src": "772:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "772:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "validAfter",
									"nameLocation": "803:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 8,
									"src": "796:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 4,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "796:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "validUntil",
									"nameLocation": "826:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 8,
									"src": "819:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 6,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "819:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ValidationData",
							"nameLocation": "751:14:0",
							"nodeType": "StructDefinition",
							"scope": 240,
							"src": "744:95:0",
							"visibility": "public"
						},
						{
							"body": {
								"id": 67,
								"nodeType": "Block",
								"src": "1102:314:0",
								"statements": [
									{
										"assignments": [
											18
										],
										"declarations": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "1116:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1108:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 26,
										"initialValue": {
											"arguments": [
												{
													"arguments": [
														{
															"id": 23,
															"name": "validationData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1145:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 21,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1137:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												],
												"id": 20,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1129:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 25,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1129:32:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1108:53:0"
									},
									{
										"assignments": [
											28
										],
										"declarations": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "1174:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1167:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 27,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1167:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 35,
										"initialValue": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 31,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1194:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "313630",
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1212:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "1194:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 30,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1187:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint48_$",
													"typeString": "type(uint48)"
												},
												"typeName": {
													"id": 29,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1187:6:0",
													"typeDescriptions": {}
												}
											},
											"id": 34,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1187:29:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1167:49:0"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 38,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 36,
												"name": "validUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 28,
												"src": "1226:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "30",
												"id": 37,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1240:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "1226:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 48,
										"nodeType": "IfStatement",
										"src": "1222:67:0",
										"trueBody": {
											"id": 47,
											"nodeType": "Block",
											"src": "1243:46:0",
											"statements": [
												{
													"expression": {
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 39,
															"name": "validUntil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1253:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"arguments": [
																	{
																		"id": 42,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1271:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 41,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "1271:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		}
																	],
																	"id": 40,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1266:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1266:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint48",
																	"typeString": "type(uint48)"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1279:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1266:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"src": "1253:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"id": 46,
													"nodeType": "ExpressionStatement",
													"src": "1253:29:0"
												}
											]
										}
									},
									{
										"assignments": [
											50
										],
										"declarations": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "1301:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1294:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 49,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 60,
										"initialValue": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1321:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_208_by_1",
																	"typeString": "int_const 208"
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3438",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1340:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_48_by_1",
																		"typeString": "int_const 48"
																	},
																	"value": "48"
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "313630",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1345:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_160_by_1",
																		"typeString": "int_const 160"
																	},
																	"value": "160"
																},
																"src": "1340:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_208_by_1",
																	"typeString": "int_const 208"
																}
															}
														],
														"id": 57,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1339:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_208_by_1",
															"typeString": "int_const 208"
														}
													},
													"src": "1321:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 52,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1314:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint48_$",
													"typeString": "type(uint48)"
												},
												"typeName": {
													"id": 51,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1314:6:0",
													"typeDescriptions": {}
												}
											},
											"id": 59,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1314:36:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1294:56:0"
									},
									{
										"expression": {
											"arguments": [
												{
													"id": 62,
													"name": "aggregator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "1378:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 63,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "1390:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												{
													"id": 64,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1402:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												],
												"id": 61,
												"name": "ValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 8,
												"src": "1363:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_ValidationData_$8_storage_ptr_$",
													"typeString": "type(struct ValidationData storage pointer)"
												}
											},
											"id": 65,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1363:50:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"functionReturnParameters": 16,
										"id": 66,
										"nodeType": "Return",
										"src": "1356:57:0"
									}
								]
							},
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "841:161:0",
								"text": " Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."
							},
							"id": 68,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_parseValidationData",
							"nameLocation": "1012:20:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 12,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 11,
										"mutability": "mutable",
										"name": "validationData",
										"nameLocation": "1043:14:0",
										"nodeType": "VariableDeclaration",
										"scope": 68,
										"src": "1038:19:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 10,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1038:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1032:27:0"
							},
							"returnParameters": {
								"id": 16,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 15,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "1096:4:0",
										"nodeType": "VariableDeclaration",
										"scope": 68,
										"src": "1074:26:0",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 14,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 13,
												"name": "ValidationData",
												"nameLocations": [
													"1074:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "1074:14:0"
											},
											"referencedDeclaration": 8,
											"src": "1074:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$8_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1073:28:0"
							},
							"scope": 240,
							"src": "1003:413:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 153,
								"nodeType": "Block",
								"src": "1762:776:0",
								"statements": [
									{
										"assignments": [
											81
										],
										"declarations": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "accountValidationData",
												"nameLocation": "1790:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1768:43:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
													"typeString": "struct ValidationData"
												},
												"typeName": {
													"id": 80,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 79,
														"name": "ValidationData",
														"nameLocations": [
															"1768:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "1768:14:0"
													},
													"referencedDeclaration": 8,
													"src": "1768:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ValidationData_$8_storage_ptr",
														"typeString": "struct ValidationData"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 85,
										"initialValue": {
											"arguments": [
												{
													"id": 83,
													"name": "validationData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 71,
													"src": "1844:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 82,
												"name": "_parseValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 68,
												"src": "1814:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$8_memory_ptr_$",
													"typeString": "function (uint256) pure returns (struct ValidationData memory)"
												}
											},
											"id": 84,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1814:50:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1768:96:0"
									},
									{
										"assignments": [
											88
										],
										"declarations": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "pmValidationData",
												"nameLocation": "1892:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1870:38:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
													"typeString": "struct ValidationData"
												},
												"typeName": {
													"id": 87,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 86,
														"name": "ValidationData",
														"nameLocations": [
															"1870:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "1870:14:0"
													},
													"referencedDeclaration": 8,
													"src": "1870:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ValidationData_$8_storage_ptr",
														"typeString": "struct ValidationData"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 92,
										"initialValue": {
											"arguments": [
												{
													"id": 90,
													"name": "paymasterValidationData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 73,
													"src": "1941:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 89,
												"name": "_parseValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 68,
												"src": "1911:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$8_memory_ptr_$",
													"typeString": "function (uint256) pure returns (struct ValidationData memory)"
												}
											},
											"id": 91,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1911:59:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1870:100:0"
									},
									{
										"assignments": [
											94
										],
										"declarations": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "1984:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1976:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 97,
										"initialValue": {
											"expression": {
												"id": 95,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "1997:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 96,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2019:10:0",
											"memberName": "aggregator",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 3,
											"src": "1997:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1976:53:0"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 103,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 98,
												"name": "aggregator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 94,
												"src": "2039:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"arguments": [
													{
														"hexValue": "30",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "2053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 99,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2053:7:0",
														"typeDescriptions": {}
													}
												},
												"id": 102,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "2053:10:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "2039:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 110,
										"nodeType": "IfStatement",
										"src": "2035:87:0",
										"trueBody": {
											"id": 109,
											"nodeType": "Block",
											"src": "2065:57:0",
											"statements": [
												{
													"expression": {
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 104,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2075:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 105,
																"name": "pmValidationData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "2088:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
																	"typeString": "struct ValidationData memory"
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2105:10:0",
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "2088:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2075:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 108,
													"nodeType": "ExpressionStatement",
													"src": "2075:40:0"
												}
											]
										}
									},
									{
										"assignments": [
											112
										],
										"declarations": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "2134:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2127:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 111,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2127:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 115,
										"initialValue": {
											"expression": {
												"id": 113,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "2147:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 114,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2169:10:0",
											"memberName": "validAfter",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 5,
											"src": "2147:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "2127:52:0"
									},
									{
										"assignments": [
											117
										],
										"declarations": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "2192:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2185:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 116,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2185:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 120,
										"initialValue": {
											"expression": {
												"id": 118,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "2205:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 119,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2227:10:0",
											"memberName": "validUntil",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 7,
											"src": "2205:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "2185:52:0"
									},
									{
										"assignments": [
											122
										],
										"declarations": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "pmValidAfter",
												"nameLocation": "2250:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2243:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 121,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2243:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 125,
										"initialValue": {
											"expression": {
												"id": 123,
												"name": "pmValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 88,
												"src": "2265:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 124,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2282:10:0",
											"memberName": "validAfter",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 5,
											"src": "2265:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "2243:49:0"
									},
									{
										"assignments": [
											127
										],
										"declarations": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "pmValidUntil",
												"nameLocation": "2305:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2298:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 126,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 130,
										"initialValue": {
											"expression": {
												"id": 128,
												"name": "pmValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 88,
												"src": "2320:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 129,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2337:10:0",
											"memberName": "validUntil",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 7,
											"src": "2320:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "2298:49:0"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 133,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 131,
												"name": "validAfter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 112,
												"src": "2358:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "<",
											"rightExpression": {
												"id": 132,
												"name": "pmValidAfter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 122,
												"src": "2371:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"src": "2358:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 138,
										"nodeType": "IfStatement",
										"src": "2354:56:0",
										"trueBody": {
											"expression": {
												"id": 136,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftHandSide": {
													"id": 134,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "2385:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "Assignment",
												"operator": "=",
												"rightHandSide": {
													"id": 135,
													"name": "pmValidAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "2398:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"src": "2385:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"id": 137,
											"nodeType": "ExpressionStatement",
											"src": "2385:25:0"
										}
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 141,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 139,
												"name": "validUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 117,
												"src": "2420:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">",
											"rightExpression": {
												"id": 140,
												"name": "pmValidUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 127,
												"src": "2433:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"src": "2420:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 146,
										"nodeType": "IfStatement",
										"src": "2416:56:0",
										"trueBody": {
											"expression": {
												"id": 144,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftHandSide": {
													"id": 142,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 117,
													"src": "2447:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "Assignment",
												"operator": "=",
												"rightHandSide": {
													"id": 143,
													"name": "pmValidUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "2460:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"src": "2447:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"id": 145,
											"nodeType": "ExpressionStatement",
											"src": "2447:25:0"
										}
									},
									{
										"expression": {
											"arguments": [
												{
													"id": 148,
													"name": "aggregator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "2500:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 149,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "2512:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												{
													"id": 150,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 117,
													"src": "2524:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												],
												"id": 147,
												"name": "ValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 8,
												"src": "2485:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_ValidationData_$8_storage_ptr_$",
													"typeString": "type(struct ValidationData storage pointer)"
												}
											},
											"id": 151,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2485:50:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"functionReturnParameters": 78,
										"id": 152,
										"nodeType": "Return",
										"src": "2478:57:0"
									}
								]
							},
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "1418:210:0",
								"text": " Intersect account and paymaster ranges.\n @param validationData          - The packed validation data of the account.\n @param paymasterValidationData - The packed validation data of the paymaster."
							},
							"id": 154,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_intersectTimeRange",
							"nameLocation": "1638:19:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 74,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 71,
										"mutability": "mutable",
										"name": "validationData",
										"nameLocation": "1671:14:0",
										"nodeType": "VariableDeclaration",
										"scope": 154,
										"src": "1663:22:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 70,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1663:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 73,
										"mutability": "mutable",
										"name": "paymasterValidationData",
										"nameLocation": "1699:23:0",
										"nodeType": "VariableDeclaration",
										"scope": 154,
										"src": "1691:31:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 72,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1691:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1657:67:0"
							},
							"returnParameters": {
								"id": 78,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 77,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 154,
										"src": "1739:21:0",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 76,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 75,
												"name": "ValidationData",
												"nameLocations": [
													"1739:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "1739:14:0"
											},
											"referencedDeclaration": 8,
											"src": "1739:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$8_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1738:23:0"
							},
							"scope": 240,
							"src": "1629:909:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 190,
								"nodeType": "Block",
								"src": "2734:143:0",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 188,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 176,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"arguments": [
														{
															"expression": {
																"id": 165,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2763:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
																	"typeString": "struct ValidationData memory"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2768:10:0",
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "2763:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2755:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 163,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2755:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2755:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 170,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 158,
																			"src": "2799:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
																				"typeString": "struct ValidationData memory"
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2804:10:0",
																		"memberName": "validUntil",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "2799:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	],
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 168,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2791:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2791:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313630",
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2819:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_160_by_1",
																	"typeString": "int_const 160"
																},
																"value": "160"
															},
															"src": "2791:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 175,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2790:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "2755:68:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 179,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "2843:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
																			"typeString": "struct ValidationData memory"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2848:10:0",
																	"memberName": "validAfter",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "2843:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2835:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 177,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2835:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2835:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313630",
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2864:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3438",
																		"id": 183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2870:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	"src": "2864:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	}
																}
															],
															"id": 185,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2863:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_208_by_1",
																"typeString": "int_const 208"
															}
														},
														"src": "2835:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 187,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "2834:40:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "2755:119:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 162,
										"id": 189,
										"nodeType": "Return",
										"src": "2740:134:0"
									}
								]
							},
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "2540:107:0",
								"text": " Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."
							},
							"id": 191,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_packValidationData",
							"nameLocation": "2657:19:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 159,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 158,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "2704:4:0",
										"nodeType": "VariableDeclaration",
										"scope": 191,
										"src": "2682:26:0",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$8_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 157,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 156,
												"name": "ValidationData",
												"nameLocations": [
													"2682:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "2682:14:0"
											},
											"referencedDeclaration": 8,
											"src": "2682:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$8_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2676:34:0"
							},
							"returnParameters": {
								"id": 162,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 161,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 191,
										"src": "2725:7:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 160,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2725:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2724:9:0"
							},
							"scope": 240,
							"src": "2648:229:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 228,
								"nodeType": "Block",
								"src": "3320:128:0",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 226,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 215,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"condition": {
																"id": 203,
																"name": "sigFailed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "3342:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "30",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3358:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "3342:17:0",
															"trueExpression": {
																"hexValue": "31",
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3354:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 207,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3341:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 210,
																		"name": "validUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "3380:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	],
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3372:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 208,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3372:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3372:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313630",
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3395:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_160_by_1",
																	"typeString": "int_const 160"
																},
																"value": "160"
															},
															"src": "3372:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 214,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3371:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "3341:58:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 218,
																	"name": "validAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "3419:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3411:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 216,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3411:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3411:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	},
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313630",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3435:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3438",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3441:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	"src": "3435:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	}
																}
															],
															"id": 223,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3434:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_208_by_1",
																"typeString": "int_const 208"
															}
														},
														"src": "3411:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 225,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "3410:35:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "3341:104:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 202,
										"id": 227,
										"nodeType": "Return",
										"src": "3326:119:0"
									}
								]
							},
							"documentation": {
								"id": 192,
								"nodeType": "StructuredDocumentation",
								"src": "2879:320:0",
								"text": " Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."
							},
							"id": 229,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_packValidationData",
							"nameLocation": "3209:19:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 199,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 194,
										"mutability": "mutable",
										"name": "sigFailed",
										"nameLocation": "3239:9:0",
										"nodeType": "VariableDeclaration",
										"scope": 229,
										"src": "3234:14:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 193,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3234:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 196,
										"mutability": "mutable",
										"name": "validUntil",
										"nameLocation": "3261:10:0",
										"nodeType": "VariableDeclaration",
										"scope": 229,
										"src": "3254:17:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										},
										"typeName": {
											"id": 195,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "3254:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 198,
										"mutability": "mutable",
										"name": "validAfter",
										"nameLocation": "3284:10:0",
										"nodeType": "VariableDeclaration",
										"scope": 229,
										"src": "3277:17:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										},
										"typeName": {
											"id": 197,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "3277:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3228:68:0"
							},
							"returnParameters": {
								"id": 202,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 201,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 229,
										"src": "3311:7:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3311:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3310:9:0"
							},
							"scope": 240,
							"src": "3200:248:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 238,
								"nodeType": "Block",
								"src": "3703:193:0",
								"statements": [
									{
										"AST": {
											"nodeType": "YulBlock",
											"src": "3722:168:0",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3736:22:0",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3753:4:0",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "3747:5:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "3747:11:0"
													},
													"variables": [
														{
															"name": "mem",
															"nodeType": "YulTypedName",
															"src": "3740:3:0",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3771:22:0",
													"value": {
														"name": "data.length",
														"nodeType": "YulIdentifier",
														"src": "3782:11:0"
													},
													"variables": [
														{
															"name": "len",
															"nodeType": "YulTypedName",
															"src": "3775:3:0",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "mem",
																"nodeType": "YulIdentifier",
																"src": "3819:3:0"
															},
															{
																"name": "data.offset",
																"nodeType": "YulIdentifier",
																"src": "3824:11:0"
															},
															{
																"name": "len",
																"nodeType": "YulIdentifier",
																"src": "3837:3:0"
															}
														],
														"functionName": {
															"name": "calldatacopy",
															"nodeType": "YulIdentifier",
															"src": "3806:12:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "3806:35:0"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3806:35:0"
												},
												{
													"nodeType": "YulAssignment",
													"src": "3854:26:0",
													"value": {
														"arguments": [
															{
																"name": "mem",
																"nodeType": "YulIdentifier",
																"src": "3871:3:0"
															},
															{
																"name": "len",
																"nodeType": "YulIdentifier",
																"src": "3876:3:0"
															}
														],
														"functionName": {
															"name": "keccak256",
															"nodeType": "YulIdentifier",
															"src": "3861:9:0"
														},
														"nodeType": "YulFunctionCall",
														"src": "3861:19:0"
													},
													"variableNames": [
														{
															"name": "ret",
															"nodeType": "YulIdentifier",
															"src": "3854:3:0"
														}
													]
												}
											]
										},
										"evmVersion": "paris",
										"externalReferences": [
											{
												"declaration": 232,
												"isOffset": false,
												"isSlot": false,
												"src": "3782:11:0",
												"suffix": "length",
												"valueSize": 1
											},
											{
												"declaration": 232,
												"isOffset": true,
												"isSlot": false,
												"src": "3824:11:0",
												"suffix": "offset",
												"valueSize": 1
											},
											{
												"declaration": 235,
												"isOffset": false,
												"isSlot": false,
												"src": "3854:3:0",
												"valueSize": 1
											}
										],
										"id": 237,
										"nodeType": "InlineAssembly",
										"src": "3713:177:0"
									}
								]
							},
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "3450:176:0",
								"text": " keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."
							},
							"id": 239,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "calldataKeccak",
							"nameLocation": "3640:14:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 233,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 232,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "3670:4:0",
										"nodeType": "VariableDeclaration",
										"scope": 239,
										"src": "3655:19:0",
										"stateVariable": false,
										"storageLocation": "calldata",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_calldata_ptr",
											"typeString": "bytes"
										},
										"typeName": {
											"id": 231,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "3655:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3654:21:0"
							},
							"returnParameters": {
								"id": 236,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 235,
										"mutability": "mutable",
										"name": "ret",
										"nameLocation": "3698:3:0",
										"nodeType": "VariableDeclaration",
										"scope": 239,
										"src": "3690:11:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 234,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "3690:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3689:13:0"
							},
							"scope": 240,
							"src": "3631:265:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "36:3861:0"
				},
				"id": 0
			},
			"interfaces/IAccountManager.sol": {
				"ast": {
					"absolutePath": "interfaces/IAccountManager.sol",
					"exportedSymbols": {
						"IAccountManager": [
							263
						],
						"UserOperation": [
							290
						],
						"UserOperationLib": [
							465
						],
						"calldataKeccak": [
							239
						]
					},
					"id": 264,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 241,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"absolutePath": "interfaces/UserOperation.sol",
							"file": "./UserOperation.sol",
							"id": 242,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 466,
							"src": "62:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccountManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 263,
							"linearizedBaseContracts": [
								263
							],
							"name": "IAccountManager",
							"nameLocation": "103:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9021ce1e",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeUserOp",
									"nameLocation": "131:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "170:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "147:29:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 243,
														"name": "UserOperation",
														"nameLocations": [
															"147:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "147:13:1"
													},
													"referencedDeclaration": 290,
													"src": "147:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$290_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "146:31:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "191:0:1"
									},
									"scope": 263,
									"src": "122:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e461f00d",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addUserAuthorization",
									"nameLocation": "203:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "232:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "224:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:14:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "256:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "256:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:6:1"
									},
									"scope": 263,
									"src": "194:68:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cfef9c97",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeUserAuthorization",
									"nameLocation": "273:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "297:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:14:1"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "329:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:6:1"
									},
									"scope": 263,
									"src": "264:71:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 264,
							"src": "93:245:1",
							"usedErrors": []
						}
					],
					"src": "36:302:1"
				},
				"id": 1
			},
			"interfaces/UserOperation.sol": {
				"ast": {
					"absolutePath": "interfaces/UserOperation.sol",
					"exportedSymbols": {
						"UserOperation": [
							290
						],
						"UserOperationLib": [
							465
						],
						"calldataKeccak": [
							239
						]
					},
					"id": 466,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"absolutePath": "core/Helpers.sol",
							"file": "../core/Helpers.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 466,
							"sourceUnit": 240,
							"src": "104:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "calldataKeccak",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 239,
										"src": "112:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "UserOperation",
							"id": 290,
							"members": [
								{
									"constant": false,
									"id": 269,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "1371:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1363:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 268,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1363:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 271,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1391:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1383:13:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 270,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1383:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 273,
									"mutability": "mutable",
									"name": "initCode",
									"nameLocation": "1408:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1402:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 272,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1402:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 275,
									"mutability": "mutable",
									"name": "callData",
									"nameLocation": "1428:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1422:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 274,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1422:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 277,
									"mutability": "mutable",
									"name": "callGasLimit",
									"nameLocation": "1450:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1442:20:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1442:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "verificationGasLimit",
									"nameLocation": "1476:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1468:28:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1468:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "preVerificationGas",
									"nameLocation": "1510:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1502:26:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 280,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1502:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "maxFeePerGas",
									"nameLocation": "1542:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1534:20:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1534:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "maxPriorityFeePerGas",
									"nameLocation": "1568:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1560:28:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 284,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1560:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "paymasterAndData",
									"nameLocation": "1600:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1594:22:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 286,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1594:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "signature",
									"nameLocation": "1628:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "1622:15:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 288,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1622:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "UserOperation",
							"nameLocation": "1343:13:2",
							"nodeType": "StructDefinition",
							"scope": 466,
							"src": "1336:304:2",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UserOperationLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 291,
								"nodeType": "StructuredDocumentation",
								"src": "1642:77:2",
								"text": " Utility functions helpful when working with UserOperation structs."
							},
							"fullyImplemented": true,
							"id": 465,
							"linearizedBaseContracts": [
								465
							],
							"name": "UserOperationLib",
							"nameLocation": "1728:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1955:221:2",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1973:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "1965:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 300,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1965:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"nodeType": "VariableDeclarationStatement",
												"src": "1965:12:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2079:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2093:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "userOp",
																		"nodeType": "YulIdentifier",
																		"src": "2114:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2101:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:20:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2093:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 301,
														"isOffset": false,
														"isSlot": false,
														"src": "2093:4:2",
														"valueSize": 1
													},
													{
														"declaration": 295,
														"isOffset": false,
														"isSlot": false,
														"src": "2114:6:2",
														"valueSize": 1
													}
												],
												"id": 303,
												"nodeType": "InlineAssembly",
												"src": "2070:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 308,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "2163:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2155:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 306,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "2155:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2155:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2147:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 304,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2147:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 299,
												"id": 311,
												"nodeType": "Return",
												"src": "2140:29:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "1751:103:2",
										"text": " Get sender from user operation data.\n @param userOp - The user operation data."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSender",
									"nameLocation": "1868:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1910:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1887:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 293,
														"name": "UserOperation",
														"nameLocations": [
															"1887:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "1887:13:2"
													},
													"referencedDeclaration": 290,
													"src": "1887:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$290_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1877:45:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1946:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:9:2"
									},
									"scope": 465,
									"src": "1859:317:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "2476:427:2",
										"statements": [
											{
												"id": 347,
												"nodeType": "UncheckedBlock",
												"src": "2486:411:2",
												"statements": [
													{
														"assignments": [
															323
														],
														"declarations": [
															{
																"constant": false,
																"id": 323,
																"mutability": "mutable",
																"name": "maxFeePerGas",
																"nameLocation": "2518:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 347,
																"src": "2510:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 322,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2510:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 326,
														"initialValue": {
															"expression": {
																"id": 324,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "2533:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2540:12:2",
															"memberName": "maxFeePerGas",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "2533:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2510:42:2"
													},
													{
														"assignments": [
															328
														],
														"declarations": [
															{
																"constant": false,
																"id": 328,
																"mutability": "mutable",
																"name": "maxPriorityFeePerGas",
																"nameLocation": "2574:20:2",
																"nodeType": "VariableDeclaration",
																"scope": 347,
																"src": "2566:28:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 327,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2566:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 331,
														"initialValue": {
															"expression": {
																"id": 329,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "2597:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2604:20:2",
															"memberName": "maxPriorityFeePerGas",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 285,
															"src": "2597:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2566:58:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "maxFeePerGas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "2642:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 333,
																"name": "maxPriorityFeePerGas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "2658:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2642:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 338,
														"nodeType": "IfStatement",
														"src": "2638:173:2",
														"trueBody": {
															"id": 337,
															"nodeType": "Block",
															"src": "2680:131:2",
															"statements": [
																{
																	"expression": {
																		"id": 335,
																		"name": "maxFeePerGas",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "2784:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 321,
																	"id": 336,
																	"nodeType": "Return",
																	"src": "2777:19:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 340,
																	"name": "maxFeePerGas",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "2835:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 341,
																		"name": "maxPriorityFeePerGas",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "2849:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 342,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2872:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2878:7:2",
																		"memberName": "basefee",
																		"nodeType": "MemberAccess",
																		"src": "2872:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2849:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 339,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2831:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2831:55:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 321,
														"id": 346,
														"nodeType": "Return",
														"src": "2824:62:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "2182:194:2",
										"text": " Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gasPrice",
									"nameLocation": "2390:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2408:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 315,
														"name": "UserOperation",
														"nameLocations": [
															"2408:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "2408:13:2"
													},
													"referencedDeclaration": 290,
													"src": "2408:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$290_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:45:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2467:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:9:2"
									},
									"scope": 465,
									"src": "2381:522:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "3133:856:2",
										"statements": [
											{
												"assignments": [
													359
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3151:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3143:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 358,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3143:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"arguments": [
														{
															"id": 361,
															"name": "userOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "3170:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																"typeString": "struct UserOperation calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																"typeString": "struct UserOperation calldata"
															}
														],
														"id": 360,
														"name": "getSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3160:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$290_calldata_ptr_$returns$_t_address_$",
															"typeString": "function (struct UserOperation calldata) pure returns (address)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3160:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3143:34:2"
											},
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "3195:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3187:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3187:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"expression": {
														"id": 366,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3203:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3210:5:2",
													"memberName": "nonce",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 271,
													"src": "3203:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3187:28:2"
											},
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "hashInitCode",
														"nameLocation": "3233:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3225:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 369,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3225:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 372,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "3263:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3270:8:2",
															"memberName": "initCode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 273,
															"src": "3263:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 371,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3248:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3248:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3225:54:2"
											},
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "hashCallData",
														"nameLocation": "3297:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3289:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 376,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 379,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "3327:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3334:8:2",
															"memberName": "callData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 275,
															"src": "3327:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 378,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3312:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3312:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3289:54:2"
											},
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "callGasLimit",
														"nameLocation": "3361:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3353:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 387,
												"initialValue": {
													"expression": {
														"id": 385,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3376:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3383:12:2",
													"memberName": "callGasLimit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 277,
													"src": "3376:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:42:2"
											},
											{
												"assignments": [
													389
												],
												"declarations": [
													{
														"constant": false,
														"id": 389,
														"mutability": "mutable",
														"name": "verificationGasLimit",
														"nameLocation": "3413:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3405:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 388,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3405:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"expression": {
														"id": 390,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3436:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3443:20:2",
													"memberName": "verificationGasLimit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 279,
													"src": "3436:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3405:58:2"
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "preVerificationGas",
														"nameLocation": "3481:18:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3473:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3473:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"expression": {
														"id": 395,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3502:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3509:18:2",
													"memberName": "preVerificationGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 281,
													"src": "3502:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3473:54:2"
											},
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "maxFeePerGas",
														"nameLocation": "3545:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3537:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3537:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"expression": {
														"id": 400,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3560:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3567:12:2",
													"memberName": "maxFeePerGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 283,
													"src": "3560:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3537:42:2"
											},
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "maxPriorityFeePerGas",
														"nameLocation": "3597:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3589:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3589:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"expression": {
														"id": 405,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3620:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3627:20:2",
													"memberName": "maxPriorityFeePerGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 285,
													"src": "3620:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3589:58:2"
											},
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "hashPaymasterAndData",
														"nameLocation": "3665:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "3657:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 408,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 411,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "3703:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3710:16:2",
															"memberName": "paymasterAndData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 287,
															"src": "3703:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 410,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3688:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3688:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3657:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3769:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3777:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 419,
															"name": "hashInitCode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3796:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 420,
															"name": "hashCallData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3810:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 421,
															"name": "callGasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3836:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 422,
															"name": "verificationGasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "3850:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 423,
															"name": "preVerificationGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "3872:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 424,
															"name": "maxFeePerGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3904:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 425,
															"name": "maxPriorityFeePerGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "3918:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 426,
															"name": "hashPaymasterAndData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "3952:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 415,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3745:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3749:6:2",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "3745:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3745:237:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 357,
												"id": 428,
												"nodeType": "Return",
												"src": "3738:244:2"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "2909:119:2",
										"text": " Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pack",
									"nameLocation": "3042:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3079:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3056:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 351,
														"name": "UserOperation",
														"nameLocations": [
															"3056:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "3056:13:2"
													},
													"referencedDeclaration": 290,
													"src": "3056:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$290_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3046:45:2"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "3128:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3115:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:18:2"
									},
									"scope": 465,
									"src": "3033:956:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "4187:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 441,
																	"name": "userOp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "4219:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																],
																"id": 440,
																"name": "pack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "4214:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$290_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (struct UserOperation calldata) pure returns (bytes memory)"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4214:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 439,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4204:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4204:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 438,
												"id": 444,
												"nodeType": "Return",
												"src": "4197:30:2"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "3995:96:2",
										"text": " Hash the user operation data.\n @param userOp - The user operation data."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "4105:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "4142:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "4119:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 433,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 432,
														"name": "UserOperation",
														"nameLocations": [
															"4119:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "4119:13:2"
													},
													"referencedDeclaration": 290,
													"src": "4119:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$290_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4109:45:2"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "4178:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:9:2"
									},
									"scope": 465,
									"src": "4096:138:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "4423:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 456,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "4440:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 457,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4444:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4440:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 460,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "4452:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4440:13:2",
													"trueExpression": {
														"id": 459,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "4448:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 455,
												"id": 462,
												"nodeType": "Return",
												"src": "4433:20:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "4240:111:2",
										"text": " The minimum of two numbers.\n @param a - First number.\n @param b - Second number."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "4365:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4377:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4369:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4369:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4388:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4380:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4380:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4368:22:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4414:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:9:2"
									},
									"scope": 465,
									"src": "4356:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 466,
							"src": "1720:2742:2",
							"usedErrors": []
						}
					],
					"src": "36:4427:2"
				},
				"id": 2
			},
			"samples/AccountManager.sol": {
				"ast": {
					"absolutePath": "samples/AccountManager.sol",
					"exportedSymbols": {
						"AccountManager": [
							551
						],
						"IAccountManager": [
							263
						],
						"UserOperation": [
							290
						],
						"UserOperationLib": [
							465
						],
						"calldataKeccak": [
							239
						]
					},
					"id": 552,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:3"
						},
						{
							"absolutePath": "interfaces/UserOperation.sol",
							"file": "../interfaces/UserOperation.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 466,
							"src": "62:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IAccountManager.sol",
							"file": "../interfaces/IAccountManager.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 264,
							"src": "104:43:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 470,
										"name": "IAccountManager",
										"nameLocations": [
											"176:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 263,
										"src": "176:15:3"
									},
									"id": 471,
									"nodeType": "InheritanceSpecifier",
									"src": "176:15:3"
								}
							],
							"canonicalName": "AccountManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551,
								263
							],
							"name": "AccountManager",
							"nameLocation": "158:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0d0117",
									"id": 473,
									"mutability": "immutable",
									"name": "masterWallet",
									"nameLocation": "224:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 551,
									"src": "199:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 472,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1828983a",
									"id": 477,
									"mutability": "mutable",
									"name": "authorizedUsers",
									"nameLocation": "275:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 551,
									"src": "243:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 476,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 474,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "251:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "243:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 475,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "262:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "332:45:3",
										"statements": [
											{
												"expression": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 482,
														"name": "masterWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "342:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 483,
														"name": "_masterWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "357:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "342:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "342:28:3"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "_masterWallet",
												"nameLocation": "317:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "309:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:23:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:0:3"
									},
									"scope": 551,
									"src": "297:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										248
									],
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "453:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 494,
																"name": "authorizedUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "471:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 497,
															"indexExpression": {
																"expression": {
																	"id": 495,
																	"name": "userOp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "487:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "494:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 269,
																"src": "487:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "471:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f7420617574686f72697a6564",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "503:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49",
																"typeString": "literal_string \"User not authorized\""
															},
															"value": "User not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f51c282a26d3f4d2b6abb63bacc5c9e266712900dfd01dfa2e9195713be5df49",
																"typeString": "literal_string \"User not authorized\""
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "463:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "463:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "463:62:3"
											}
										]
									},
									"functionSelector": "9021ce1e",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeUserOp",
									"nameLocation": "392:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "431:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "408:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$290_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 489,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 488,
														"name": "UserOperation",
														"nameLocations": [
															"408:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "408:13:3"
													},
													"referencedDeclaration": 290,
													"src": "408:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$290_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:31:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:0:3"
									},
									"scope": 551,
									"src": "383:149:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										255
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "623:66:3",
										"statements": [
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 511,
															"name": "authorizedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "633:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 513,
														"indexExpression": {
															"id": 512,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "649:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "633:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "657:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "633:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "633:28:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "678:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 510,
												"id": 518,
												"nodeType": "Return",
												"src": "671:11:3"
											}
										]
									},
									"functionSelector": "e461f00d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 506,
												"name": "onlyMasterWallet",
												"nameLocations": [
													"591:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "591:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "591:16:3"
										}
									],
									"name": "addUserAuthorization",
									"nameLocation": "547:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "576:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "568:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:14:3"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "617:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "617:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:6:3"
									},
									"scope": 551,
									"src": "538:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										262
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "783:67:3",
										"statements": [
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 529,
															"name": "authorizedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "793:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 531,
														"indexExpression": {
															"id": 530,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "809:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "793:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "817:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "793:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "793:29:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "839:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 528,
												"id": 536,
												"nodeType": "Return",
												"src": "832:11:3"
											}
										]
									},
									"functionSelector": "cfef9c97",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 525,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 524,
												"name": "onlyMasterWallet",
												"nameLocations": [
													"751:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "751:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "751:16:3"
										}
									],
									"name": "removeUserAuthorization",
									"nameLocation": "704:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "736:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:14:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "777:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:6:3"
									},
									"scope": 551,
									"src": "695:155:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "884:94:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 541,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "902:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "906:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "902:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 543,
																"name": "masterWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "916:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "902:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206d61737465722077616c6c65742063616e2063616c6c",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "930:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b",
																"typeString": "literal_string \"Only master wallet can call\""
															},
															"value": "Only master wallet can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5598ff6df695c258264a93226947050058f5dd52c82cbaa69bb1fb962d09439b",
																"typeString": "literal_string \"Only master wallet can call\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "894:66:3"
											},
											{
												"id": 548,
												"nodeType": "PlaceholderStatement",
												"src": "970:1:3"
											}
										]
									},
									"id": 550,
									"name": "onlyMasterWallet",
									"nameLocation": "865:16:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:2:3"
									},
									"src": "856:122:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 552,
							"src": "149:832:3",
							"usedErrors": []
						}
					],
					"src": "36:946:3"
				},
				"id": 3
			}
		}
	}
}